@use "sass:map";
@use "sass:color";
@use "colors" as *;

$-primary-base: #162dae;
$-secondary-base: #ffb700;
$-dark-bg: #121212;

$-theme: (
    "light": (
        "primary": $-primary-base,
        "primary-variant": scale-color($-primary-base, $lightness: -20%),
        "secondary": $-secondary-base,
        "secondary-variant": scale-color($-secondary-base, $lightness: -20%),
        "background": $white,
        "surface": $white,
        "error": map-get($red, 800),
        "on-primary": $white,
        "on-secondary": $black,
        "on-background": $black,
        "on-surface": $black,
        "on-error": $white,
    ),
    "dark": (
        "primary": scale-color($-primary-base, $lightness: 30%),
        "primary-variant": $-primary-base,
        "secondary": $-secondary-base,
        "background": $-dark-bg,
        "surface": $-dark-bg,
        "error": map-get($red, 300),
        "on-primary": $black,
        "on-secondary": $black,
        "on-background": $white,
        "on-surface": $white,
        "on-error": $black,
    ),
);

@function get-color($theme-name, $color-type) {
    @return map-get(map-get($-theme, $theme-name), $color-type);
}

// Sets the background color and content color based on the theme type (light or dark) for each
// color type.
@mixin primary($type:"light") {
    background-color: get-color($type, "primary");
    color: get-color($type, "on-primary");
}

@mixin primary-variant($type:"light") {
    background-color: get-color($type, "primary-variant");
    color: get-color($type, "on-primary");
}

@mixin secondary($type:"light") {
    background-color: get-color($type, "secondary");
    color: get-color($type, "on-secondary");
}

@mixin secondary-variant($type:"light") {
    background-color: get-color($type, "secondary-variant");
    color: get-color($type, "on-secondary");
}

@mixin background($type:"light") {
    background-color: get-color($type, "background");
    color: get-color($type, "on-background");
}

@mixin surface($type:"light") {
    background-color: get-color($type, "surface");
    color: get-color($type, "on-surface");
}

@mixin error($type:"light") {
    background-color: get-color($type, "error");
    color: get-color($type, "on-error");
}